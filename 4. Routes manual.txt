I. Определения

************************************        # MODELS
belongs_to :xxx                             - условия зависимости от xxx
belongs_to :user                            - обозначили связь с пользователем (для книги как пример)
has_one :books                              - обозначили, что в моделе (к примеру пользователь), может быть только одна :books (ограничение к примеру)
has_many :books                             - обозначили, что в моделе (к примеру пользователь), может быть много значений :books


************************************        # CONTROLLERS
render                                      - возвращает какие-то данные (не прерывая комманды)! (использовать, при заполнении данных - клиент в барбер шоп к примеру)
render action: 'new'                        - возврат то что генерирует action: 'new' (new.html.erb)
redirect_to                                 - прерывает комманду и возвращает, на исходное положение условий (использовать от 2ных submit, оплата картой к примеру)
redirect_to xxx_path(@xxx)                  - прерывает комманду и возвращает, на исходное положение условий (путь)


************************************        # VIEWS/LAYOUTS
<a href="/articles">Show all articles</a>                              - так можно - но так не правильно (если поменяется что-то, то она будет битой)
<%= link_to 'Show all articles', articles_path %>                      - правильное добавление ссылки
<%= link_to 'Show', article_path(article) %>                           - article (это :id конкретное) в контексте <% @articles.each do |article| %>
<%= link_to 'Sign Out!', destroy_user_session_path, method: :delete %> - в этом варианте, нужно добавить конкретный метод! (смотреть какой путь идёт в табличке!) у нас на выход был метод DESTROY - он же и delete, это нужно указать! method: :delete

-----------------
path_names: {:new => ''}                    - изменили путь, пустая строка - означает, что путь останется прежним для блока :new
get 'xxx' => 'pages#xxx'                    - определяем путь перехода xxx
<%= link_to 'X', method: :delete %>         - переход на условия удаления чего либо (сеанса, продукта, страницы и т.д.)

-----------------
  <% @book.each do |book| %>
    <a href="/books/<%= book.id %>">                    <- ссылка перехода, при кликаньи на картинку
      <%= image_tag book.book_img.url(:book_index), class: "book" %>   <- выводим картинку книги, и добавляем класс который позже распишем оформление в stylesheets!
    </a>

-----------------
<%= form_for() do |f| %>                    - форма для цикла
<%= form_for([@article, @article.comments.build]) do |f| %> - форма которая создаётся для связанных друг с другом сущностей (получится /articles/3/comments)

-----------------
<%= simple_form_for @book, :html => { :multipart => true } do |f| %>  <- :html => { :multipart => true } - подключили HTML


************************************        # Методы: первые 6 пунктов используется для resource & resources, index - только для resources (для множественных)
new(GET)                                    - отправить
create(POST)                                - получить
edit(GET)                                   - редактировать
update(POST)                                - редактировать
destroy(DELETE)                             - удалить
show(GET)                                   - показать
index(GET)                                  - список (используется для множесвенных целей, resorces)


************************************        # (cmd) полезные комманды
rake routes                                 - выводит список маршрутов (показывает все маршруты, созданные в программе)
start rails server -e development           - ключ, запускается в окружении (существует несколько: development, production, test)
rails generate GEN                          - параметры запуска (controller, model..) (rails g) - сокращённый вариант
************************************************************************************************************
************************************************************************************************************



II. Работа с ROUTE

************************************        # работа с ROUTES (\config\routes.rb) (cmd) rake routes  - пользоваться - постоянно!
Rails.application.routes.draw do
  resources :books                          <- к чему привязано, название контроллера!
  root 'books#index'                        <- маршрут стартует со страницы index который привязан к контроллеру books
end

-----------------
Rails.application.routes.draw do
  devise_for :users
  resources :books do                       <- подгружаем саму книгу, в которой будут содержаться отзывы
    resources :reviews                      <- подгружаем отзывы в книгу
  end
  root 'books#index'
end
************************************************************************************************************
************************************************************************************************************