IV. Циклы, функции, классы, модули и т.д.

-----------------                           # циклы
10.times do |x|                             - 10 рас повторять блок (х берется за значение от 0 до 9 в данном примере)
1.upto(12)                                  - 1....12 (увеличить от 1 до 12)
12.downto(1)                                - 12....1 (уменьшить с 12 до 1)
(1..10).each do                             - делать для каждого элемента (к примеру массива) (L8.2.1.rb)
.each_with_index do |item,i|                - объект и индекс (в одном флаконе) (L11.1.0.rb)

-----------------                           # бесконечные циклы
loop do                                     - бесконечный цикл
while true                                  - бесконечный цикл
while !nil                                  - бесконечный цикл
while 2+2==4 do                             - пока выполняется это условие, будет тото.. (L8.2.rb)

-----------------                           # функции
def                                         - сохранить цикл (define)(т.е. потом одной строкой запустить по новой) (L9.0.2.rb) если в def имеется параметр хеш (он обязан идти последним)
def blabla?                                 - в цикле true or falce (метод) (L14.2.0.rb)
def self.(имя)                              - статический метод (выводить без создания нового елемента, типа .new)

method_missing name                         - метод, запускающийся в тот момент, когда имя метода не указали (он автоматически сработает) (L17.2.0.rb, L17.2.1.rb)
send :define_method, "bla" do               - функция # во время исполнения программы, можешь определить свой метод по имени (L17.3.0.rb, L17.3.1.rb)
yeild (в блоке def)                         - (L16.2.0.rb, L16.2.1.rb)

-----------------                           # классы, модули
module                                      - модули включают в себя классы (создано для програмистов, упрощения кода) (L16.5.0.rb)
class                                       - цикл на классы (L15.0.2.rb) ДОСТОЙНЫЙ ПРИМЕР
class Cat < Animal                          - пример унаследования(Inharitance)!! (L.15.2.0.rb)
super                                       - супаер class (L15.2.1.rb)
initialize                                  - (в классе)  длобавить хеш в класс (L.14.1.1.rb)


************************************        # сравнения (end)
if a==1                                     - если а рано 1
if a!=1                                     - если а не равно 1
if (<=; >=; <; >)                           - больше, меньше и т.д.
if a==0 && a<10                             - приставка И (дополнительные условия)
if a==y .. elsif a<=y..                     - иначе
if a==y .. else ...                         - любое другое значение
puts "Already exist!" if @hh[set_name]      - проверка на повторность (L13.1.2.rb)
if !метод def?                              - если (что-то, к примеру из метода def) не существует, то ... (L27)

a+b == 4? true:falce                        - сравнение в одну строку, только где true falce - пишешь свои условия (#Если переменная @barber = Дарья Олеговна, тогда выводить 'selected'(то что выбрано), если нет - тогда ''<option <%= @barber == 'Дарья Олеговна' ? 'selected' : '' %>>Дарья Олеговна</option>
************************************************************************************************************
************************************************************************************************************